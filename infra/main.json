{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "3859185462333658620"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "centralus",
      "metadata": {
        "description": "The location for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, staging, prod)"
      }
    },
    "projectName": {
      "type": "string",
      "defaultValue": "medicaid-rag",
      "metadata": {
        "description": "Project name used for resource naming"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[format('rg-{0}-{1}', parameters('projectName'), parameters('environment'))]",
      "metadata": {
        "description": "Resource group name"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "project": "[parameters('projectName')]",
        "environment": "[parameters('environment')]",
        "workload": "ai-rag",
        "costCenter": "development",
        "deployedBy": "bicep",
        "deployedAt": "[utcNow()]"
      },
      "metadata": {
        "description": "Tags to apply to all resources"
      }
    },
    "embeddingModel": {
      "type": "string",
      "defaultValue": "text-embedding-3-large",
      "metadata": {
        "description": "Embedding model to deploy"
      }
    },
    "chatModel": {
      "type": "string",
      "defaultValue": "gpt-4o-mini",
      "metadata": {
        "description": "Chat model to deploy"
      }
    },
    "additionalModels": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Additional models to deploy (optional)"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2023-07-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "monitoring-deployment",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "projectName": {
            "value": "[parameters('projectName')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "3095628079796862253"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for the resources"
              }
            },
            "projectName": {
              "type": "string",
              "metadata": {
                "description": "Project name for resource naming"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "Environment name"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to apply to all resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2023-09-01",
              "name": "[format('{0}-logs-{1}', parameters('projectName'), parameters('environment'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "features": {
                  "enableLogAccessUsingOnlyResourcePermissions": true
                }
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[format('{0}-insights-{1}', parameters('projectName'), parameters('environment'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}', parameters('projectName'), parameters('environment')))]",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}', parameters('projectName'), parameters('environment')))]"
              ]
            }
          ],
          "outputs": {
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}', parameters('projectName'), parameters('environment')))]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[format('{0}-logs-{1}', parameters('projectName'), parameters('environment'))]"
            },
            "applicationInsightsId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', format('{0}-insights-{1}', parameters('projectName'), parameters('environment')))]"
            },
            "applicationInsightsName": {
              "type": "string",
              "value": "[format('{0}-insights-{1}', parameters('projectName'), parameters('environment'))]"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-insights-{1}', parameters('projectName'), parameters('environment'))), '2020-02-02').InstrumentationKey]"
            },
            "applicationInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-insights-{1}', parameters('projectName'), parameters('environment'))), '2020-02-02').ConnectionString]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvault-deployment",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "projectName": {
            "value": "[parameters('projectName')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "7253830039266688200"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for the resources"
              }
            },
            "projectName": {
              "type": "string",
              "metadata": {
                "description": "Project name for resource naming"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "Environment name"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to apply to all resources"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace ID for diagnostics"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}-kv-{1}', parameters('projectName'), parameters('environment'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "publicNetworkAccess": "Enabled",
                "networkAcls": {
                  "defaultAction": "Allow",
                  "bypass": "AzureServices"
                }
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', format('{0}-kv-{1}', parameters('projectName'), parameters('environment')))]",
              "name": "keyVaultDiagnostics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "category": "AuditEvent",
                    "enabled": true
                  },
                  {
                    "category": "AzurePolicyEvaluationDetails",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv-{1}', parameters('projectName'), parameters('environment')))]"
              ]
            }
          ],
          "outputs": {
            "keyVaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv-{1}', parameters('projectName'), parameters('environment')))]"
            },
            "keyVaultName": {
              "type": "string",
              "value": "[format('{0}-kv-{1}', parameters('projectName'), parameters('environment'))]"
            },
            "keyVaultUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', format('{0}-kv-{1}', parameters('projectName'), parameters('environment'))), '2023-07-01').vaultUri]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storage-deployment",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "projectName": {
            "value": "[parameters('projectName')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "5506833637197465827"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for the resources"
              }
            },
            "projectName": {
              "type": "string",
              "metadata": {
                "description": "Project name for resource naming"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "Environment name"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to apply to all resources"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace ID for diagnostics"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "services": {
                    "blob": {
                      "enabled": true,
                      "keyType": "Account"
                    },
                    "file": {
                      "enabled": true,
                      "keyType": "Account"
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "networkAcls": {
                  "defaultAction": "Allow",
                  "bypass": "AzureServices"
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment')), 'default')]",
              "properties": {
                "deleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                },
                "containerDeleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}/{2}', format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment')), 'default', 'docs')]",
              "properties": {
                "publicAccess": "None",
                "metadata": {
                  "purpose": "RAG document storage",
                  "description": "Container for documents to be indexed by AI Search"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment')), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment')))]",
              "name": "storageAccountDiagnostics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}', format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment')), 'default')]",
              "name": "blobDiagnostics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "category": "StorageRead",
                    "enabled": true
                  },
                  {
                    "category": "StorageWrite",
                    "enabled": true
                  },
                  {
                    "category": "StorageDelete",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment')), 'default')]"
              ]
            }
          ],
          "outputs": {
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment')))]"
            },
            "storageAccountName": {
              "type": "string",
              "value": "[format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment'))]"
            },
            "docsContainerName": {
              "type": "string",
              "value": "docs"
            },
            "primaryEndpoints": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('{0}stor{1}', replace(parameters('projectName'), '-', ''), parameters('environment'))), '2023-05-01').primaryEndpoints]"
            },
            "connectionStringSecretName": {
              "type": "string",
              "value": "storage-connection-string"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ai-foundry-deployment",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "projectName": {
            "value": "[parameters('projectName')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "keyVaultId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault-deployment'), '2022-09-01').outputs.keyVaultId.value]"
          },
          "storageAccountId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'storage-deployment'), '2022-09-01').outputs.storageAccountId.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "18442781915578435316"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for the resources"
              }
            },
            "projectName": {
              "type": "string",
              "metadata": {
                "description": "Project name for resource naming"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "Environment name"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to apply to all resources"
              }
            },
            "keyVaultId": {
              "type": "string",
              "metadata": {
                "description": "Key Vault resource ID"
              }
            },
            "storageAccountId": {
              "type": "string",
              "metadata": {
                "description": "Storage Account resource ID"
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace ID for diagnostics"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2024-04-01",
              "name": "[format('{0}-hub-{1}', parameters('projectName'), parameters('environment'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "sku": {
                "name": "Basic",
                "tier": "Basic"
              },
              "kind": "Hub",
              "properties": {
                "friendlyName": "[format('{0} AI Hub ({1})', parameters('projectName'), parameters('environment'))]",
                "description": "AI Hub for Medicaid RAG and AI Agent solution",
                "storageAccount": "[parameters('storageAccountId')]",
                "keyVault": "[parameters('keyVaultId')]",
                "publicNetworkAccess": "Enabled",
                "discoveryUrl": "[format('https://{0}.api.azureml.ms/discovery', parameters('location'))]"
              }
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2024-04-01",
              "name": "[format('{0}-project-{1}', parameters('projectName'), parameters('environment'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "sku": {
                "name": "Basic",
                "tier": "Basic"
              },
              "kind": "Project",
              "properties": {
                "friendlyName": "[format('{0} AI Project ({1})', parameters('projectName'), parameters('environment'))]",
                "description": "AI Project for Medicaid RAG and AI Agent solution",
                "hubResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', format('{0}-hub-{1}', parameters('projectName'), parameters('environment')))]",
                "publicNetworkAccess": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', format('{0}-hub-{1}', parameters('projectName'), parameters('environment')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.MachineLearningServices/workspaces/{0}', format('{0}-hub-{1}', parameters('projectName'), parameters('environment')))]",
              "name": "aiHubDiagnostics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', format('{0}-hub-{1}', parameters('projectName'), parameters('environment')))]"
              ]
            }
          ],
          "outputs": {
            "aiHubId": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', format('{0}-hub-{1}', parameters('projectName'), parameters('environment')))]"
            },
            "aiHubName": {
              "type": "string",
              "value": "[format('{0}-hub-{1}', parameters('projectName'), parameters('environment'))]"
            },
            "aiProjectId": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', format('{0}-project-{1}', parameters('projectName'), parameters('environment')))]"
            },
            "aiProjectName": {
              "type": "string",
              "value": "[format('{0}-project-{1}', parameters('projectName'), parameters('environment'))]"
            },
            "aiProjectEndpoint": {
              "type": "string",
              "value": "[format('https://{0}.{1}.inference.ml.azure.com', format('{0}-project-{1}', parameters('projectName'), parameters('environment')), parameters('location'))]"
            },
            "aiHubPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', format('{0}-hub-{1}', parameters('projectName'), parameters('environment'))), '2024-04-01', 'full').identity.principalId]"
            },
            "aiProjectPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', format('{0}-project-{1}', parameters('projectName'), parameters('environment'))), '2024-04-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault-deployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'storage-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openai-deployment",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "projectName": {
            "value": "[parameters('projectName')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "aiHubId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-foundry-deployment'), '2022-09-01').outputs.aiHubId.value]"
          },
          "keyVaultId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault-deployment'), '2022-09-01').outputs.keyVaultId.value]"
          },
          "embeddingModel": {
            "value": "[parameters('embeddingModel')]"
          },
          "chatModel": {
            "value": "[parameters('chatModel')]"
          },
          "additionalModels": {
            "value": "[parameters('additionalModels')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9513580888493448587"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure OpenAI Service for Medicaid RAG + AI Agent solution"
              }
            },
            "projectName": {
              "type": "string"
            },
            "environment": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "aiHubId": {
              "type": "string"
            },
            "keyVaultId": {
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "embeddingModel": {
              "type": "string",
              "defaultValue": "text-embedding-3-large",
              "metadata": {
                "description": "OpenAI model configuration"
              }
            },
            "chatModel": {
              "type": "string",
              "defaultValue": "gpt-4o-mini"
            },
            "additionalModels": {
              "type": "array",
              "defaultValue": []
            },
            "gptCapacity": {
              "type": "int",
              "defaultValue": 10,
              "metadata": {
                "description": "Model deployment capacity (TPM)"
              }
            },
            "embeddingCapacity": {
              "type": "int",
              "defaultValue": 3
            }
          },
          "variables": {
            "openAIServiceName": "[format('openai-{0}-{1}-{2}', parameters('projectName'), parameters('environment'), uniqueString(resourceGroup().id))]",
            "keyVaultName": "[last(split(parameters('keyVaultId'), '/'))]"
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[variables('openAIServiceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "OpenAI",
              "sku": {
                "name": "S0"
              },
              "properties": {
                "customSubDomainName": "[variables('openAIServiceName')]",
                "networkAcls": {
                  "defaultAction": "Allow"
                },
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": false
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', variables('openAIServiceName'), 'gpt-chat')]",
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('chatModel')]",
                  "version": "[if(equals(parameters('chatModel'), 'gpt-4o-mini'), '2024-07-18', '2024-02-15-preview')]"
                },
                "raiPolicyName": "Microsoft.Default"
              },
              "sku": {
                "name": "Standard",
                "capacity": "[parameters('gptCapacity')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', variables('openAIServiceName'), 'text-embedding')]",
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('embeddingModel')]",
                  "version": "[if(equals(parameters('embeddingModel'), 'text-embedding-3-large'), '1', '2')]"
                },
                "raiPolicyName": "Microsoft.Default"
              },
              "sku": {
                "name": "Standard",
                "capacity": "[parameters('embeddingCapacity')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', variables('openAIServiceName'), 'gpt-chat')]",
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'openai-endpoint')]",
              "properties": {
                "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName')), '2023-05-01').endpoint]",
                "contentType": "text/plain"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'openai-api-key')]",
              "properties": {
                "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName')), '2023-05-01').key1]",
                "contentType": "text/plain"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'openai-chat-deployment')]",
              "properties": {
                "value": "gpt-chat",
                "contentType": "text/plain"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', variables('openAIServiceName'), 'gpt-chat')]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'openai-embedding-deployment')]",
              "properties": {
                "value": "text-embedding",
                "contentType": "text/plain"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', variables('openAIServiceName'), 'text-embedding')]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', variables('openAIServiceName'))]",
              "name": "openai-diagnostics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName'))]"
              ]
            }
          ],
          "outputs": {
            "openAIServiceName": {
              "type": "string",
              "value": "[variables('openAIServiceName')]"
            },
            "openAIServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName'))]"
            },
            "openAIEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName')), '2023-05-01').endpoint]"
            },
            "chatDeploymentName": {
              "type": "string",
              "value": "gpt-chat"
            },
            "embeddingDeploymentName": {
              "type": "string",
              "value": "text-embedding"
            },
            "openAIPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAIServiceName')), '2023-05-01', 'full').identity.principalId]"
            },
            "apiKeySecretName": {
              "type": "string",
              "value": "openai-api-key"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-foundry-deployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault-deployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ai-search-deployment",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "projectName": {
            "value": "[parameters('projectName')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "aiHubId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-foundry-deployment'), '2022-09-01').outputs.aiHubId.value]"
          },
          "keyVaultId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault-deployment'), '2022-09-01').outputs.keyVaultId.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "6876791558334825570"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure AI Search service for vector search in Medicaid RAG solution"
              }
            },
            "projectName": {
              "type": "string"
            },
            "environment": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "aiHubId": {
              "type": "string"
            },
            "keyVaultId": {
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "searchServiceSku": {
              "type": "string",
              "defaultValue": "basic",
              "allowedValues": [
                "free",
                "basic",
                "standard",
                "standard2",
                "standard3",
                "storage_optimized_l1",
                "storage_optimized_l2"
              ],
              "metadata": {
                "description": "Search service tier"
              }
            },
            "replicaCount": {
              "type": "int",
              "defaultValue": 1,
              "minValue": 1,
              "maxValue": 12,
              "metadata": {
                "description": "Number of replicas for the search service"
              }
            },
            "partitionCount": {
              "type": "int",
              "defaultValue": 1,
              "allowedValues": [
                1,
                2,
                3,
                4,
                6,
                12
              ],
              "metadata": {
                "description": "Number of partitions for the search service"
              }
            }
          },
          "variables": {
            "searchServiceName": "[format('search-{0}-{1}-{2}', parameters('projectName'), parameters('environment'), uniqueString(resourceGroup().id))]",
            "keyVaultName": "[last(split(parameters('keyVaultId'), '/'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2023-11-01",
              "name": "[variables('searchServiceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('searchServiceSku')]"
              },
              "properties": {
                "replicaCount": "[parameters('replicaCount')]",
                "partitionCount": "[parameters('partitionCount')]",
                "hostingMode": "default",
                "publicNetworkAccess": "enabled",
                "networkRuleSet": {
                  "ipRules": []
                },
                "encryptionWithCmk": {
                  "enforcement": "Unspecified"
                },
                "disableLocalAuth": false,
                "authOptions": {
                  "apiKeyOnly": {}
                },
                "semanticSearch": "[if(equals(parameters('searchServiceSku'), 'free'), 'disabled', 'standard')]"
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'search-endpoint')]",
              "properties": {
                "value": "[format('https://{0}.search.windows.net', variables('searchServiceName'))]",
                "contentType": "text/plain"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'search-admin-key')]",
              "properties": {
                "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceName')), '2023-11-01').primaryKey]",
                "contentType": "text/plain"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'search-query-key')]",
              "properties": {
                "value": "[listQueryKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceName')), '2023-11-01').value[0].key]",
                "contentType": "text/plain"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Search/searchServices/{0}', variables('searchServiceName'))]",
              "name": "search-diagnostics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "category": "OperationLogs",
                    "enabled": true
                  },
                  {
                    "category": "SearchSlowLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
              ]
            }
          ],
          "outputs": {
            "aiSearchServiceName": {
              "type": "string",
              "value": "[variables('searchServiceName')]"
            },
            "aiSearchServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
            },
            "aiSearchEndpoint": {
              "type": "string",
              "value": "[format('https://{0}.search.windows.net', variables('searchServiceName'))]"
            },
            "searchPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Search/searchServices', variables('searchServiceName')), '2023-11-01', 'full').identity.principalId]"
            },
            "searchServiceSku": {
              "type": "string",
              "value": "[parameters('searchServiceSku')]"
            },
            "adminKeySecretName": {
              "type": "string",
              "value": "search-admin-key"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-foundry-deployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault-deployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "translator-deployment",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "projectName": {
            "value": "[parameters('projectName')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "aiHubId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-foundry-deployment'), '2022-09-01').outputs.aiHubId.value]"
          },
          "keyVaultId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault-deployment'), '2022-09-01').outputs.keyVaultId.value]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment'), '2022-09-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "402351990912204508"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure AI Translator service for multi-language Medicaid document translation"
              }
            },
            "projectName": {
              "type": "string"
            },
            "environment": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "aiHubId": {
              "type": "string"
            },
            "keyVaultId": {
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string"
            },
            "translatorSku": {
              "type": "string",
              "defaultValue": "S1",
              "allowedValues": [
                "F0",
                "S1",
                "S2",
                "S3",
                "S4"
              ],
              "metadata": {
                "description": "Translator service tier"
              }
            }
          },
          "variables": {
            "translatorServiceName": "[format('translator-{0}-{1}-{2}', parameters('projectName'), parameters('environment'), uniqueString(resourceGroup().id))]",
            "keyVaultName": "[last(split(parameters('keyVaultId'), '/'))]"
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[variables('translatorServiceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "TextTranslation",
              "sku": {
                "name": "[parameters('translatorSku')]"
              },
              "properties": {
                "customSubDomainName": "[variables('translatorServiceName')]",
                "networkAcls": {
                  "defaultAction": "Allow"
                },
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": false
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'translator-endpoint')]",
              "properties": {
                "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('translatorServiceName')), '2023-05-01').endpoint]",
                "contentType": "text/plain"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('translatorServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'translator-api-key')]",
              "properties": {
                "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('translatorServiceName')), '2023-05-01').key1]",
                "contentType": "text/plain"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('translatorServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'translator-region')]",
              "properties": {
                "value": "[parameters('location')]",
                "contentType": "text/plain"
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', variables('translatorServiceName'))]",
              "name": "translator-diagnostics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('translatorServiceName'))]"
              ]
            }
          ],
          "outputs": {
            "translatorServiceName": {
              "type": "string",
              "value": "[variables('translatorServiceName')]"
            },
            "translatorServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', variables('translatorServiceName'))]"
            },
            "translatorEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('translatorServiceName')), '2023-05-01').endpoint]"
            },
            "translatorPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('translatorServiceName')), '2023-05-01', 'full').identity.principalId]"
            },
            "translatorSku": {
              "type": "string",
              "value": "[parameters('translatorSku')]"
            },
            "translatorKeySecretName": {
              "type": "string",
              "value": "translator-api-key"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-foundry-deployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault-deployment')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[parameters('resourceGroupName')]"
    },
    "location": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "aiHubName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-foundry-deployment'), '2022-09-01').outputs.aiHubName.value]"
    },
    "aiProjectName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-foundry-deployment'), '2022-09-01').outputs.aiProjectName.value]"
    },
    "aiProjectEndpoint": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-foundry-deployment'), '2022-09-01').outputs.aiProjectEndpoint.value]"
    },
    "openAIServiceName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'openai-deployment'), '2022-09-01').outputs.openAIServiceName.value]"
    },
    "openAIEndpoint": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'openai-deployment'), '2022-09-01').outputs.openAIEndpoint.value]"
    },
    "embeddingDeploymentName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'openai-deployment'), '2022-09-01').outputs.embeddingDeploymentName.value]"
    },
    "chatDeploymentName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'openai-deployment'), '2022-09-01').outputs.chatDeploymentName.value]"
    },
    "aiSearchServiceName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-search-deployment'), '2022-09-01').outputs.aiSearchServiceName.value]"
    },
    "aiSearchEndpoint": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-search-deployment'), '2022-09-01').outputs.aiSearchEndpoint.value]"
    },
    "translatorServiceName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'translator-deployment'), '2022-09-01').outputs.translatorServiceName.value]"
    },
    "translatorEndpoint": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'translator-deployment'), '2022-09-01').outputs.translatorEndpoint.value]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'storage-deployment'), '2022-09-01').outputs.storageAccountName.value]"
    },
    "docsContainerName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'storage-deployment'), '2022-09-01').outputs.docsContainerName.value]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault-deployment'), '2022-09-01').outputs.keyVaultName.value]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring-deployment'), '2022-09-01').outputs.logAnalyticsWorkspaceName.value]"
    },
    "secretNames": {
      "type": "object",
      "value": {
        "openAIApiKey": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'openai-deployment'), '2022-09-01').outputs.apiKeySecretName.value]",
        "aiSearchAdminKey": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'ai-search-deployment'), '2022-09-01').outputs.adminKeySecretName.value]",
        "translatorKey": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'translator-deployment'), '2022-09-01').outputs.translatorKeySecretName.value]",
        "storageConnectionString": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'storage-deployment'), '2022-09-01').outputs.connectionStringSecretName.value]"
      }
    }
  }
}